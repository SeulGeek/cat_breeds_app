// Mocks generated by Mockito 5.4.6 from annotations
// in cat_breeds_app/test/cat_breed_detail/pages/cat_breed_detail_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:cat_breeds_app/features/cat_breeds/model/cat_breed.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _Fake$CatBreedCopyWith_0<$Res> extends _i1.SmartFake
    implements _i2.$CatBreedCopyWith<$Res> {
  _Fake$CatBreedCopyWith_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CatBreed].
///
/// See the documentation for Mockito's code generation for more information.
class MockCatBreed extends _i1.Mock implements _i2.CatBreed {
  @override
  String get breed => (super.noSuchMethod(
        Invocation.getter(#breed),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#breed),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#breed),
        ),
      ) as String);

  @override
  String get country => (super.noSuchMethod(
        Invocation.getter(#country),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#country),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#country),
        ),
      ) as String);

  @override
  String get origin => (super.noSuchMethod(
        Invocation.getter(#origin),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#origin),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#origin),
        ),
      ) as String);

  @override
  String get coat => (super.noSuchMethod(
        Invocation.getter(#coat),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#coat),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#coat),
        ),
      ) as String);

  @override
  String get pattern => (super.noSuchMethod(
        Invocation.getter(#pattern),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#pattern),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#pattern),
        ),
      ) as String);

  @override
  _i2.$CatBreedCopyWith<_i2.CatBreed> get copyWith => (super.noSuchMethod(
        Invocation.getter(#copyWith),
        returnValue: _Fake$CatBreedCopyWith_0<_i2.CatBreed>(
          this,
          Invocation.getter(#copyWith),
        ),
        returnValueForMissingStub: _Fake$CatBreedCopyWith_0<_i2.CatBreed>(
          this,
          Invocation.getter(#copyWith),
        ),
      ) as _i2.$CatBreedCopyWith<_i2.CatBreed>);

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}
